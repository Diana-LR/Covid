var documenterSearchIndex = {"docs":
[{"location":"#Covid.jl","page":"Home","title":"Covid.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [Covid]","category":"page"},{"location":"#Covid.CSV_to_DataFrame","page":"Home","title":"Covid.CSV_to_DataFrame","text":"CSV_to_DataFrame(path_url::String, encoding::String=\"UTF-8\")::DataFrame\n\nLee un archivo CSV con el encoding indicado y regresa un DataFrame.\n\nEjemplo\n\njulia> df = DataFrameEncode(\"datos.csv\")\njulia> df_latin1 = DataFrameEncode(\"datos.csv\", \"LATIN1\")\n\nLos encodings soportados dependen de la plataforma, obtén la lista de la siguiente manera.\n\njulia> using StringEncodings\njulia> encodings()\n\n\n\n\n\n\n","category":"function"},{"location":"#Covid.Select-Tuple{DataFrames.DataFrame,Array{String,1}}","page":"Home","title":"Covid.Select","text":"Select(Tabla::DataFrame,query::Vector{String})::DataFrame\n\nSelecciona una o varias columnas del DataFrame puede ser por nombre o por número de columna y regresa un nuevo DataFrame con las columnas seleccionadas.\n\nEjemplo\n\n\njulia> tabla = DataFrame(A = 1:3, B= 1:3)\n3×2 DataFrame\n Row │ A      B\n     │ Int32  Int32\n─────┼──────────────\n   1 │     1      1\n   2 │     2      2\n   3 │     3      3\n\njulia> q1 = Selects.Select(tabla,[\"1\"])\n3×1 DataFrame\n Row │ A\n     │ Int32\n─────┼───────\n   1 │     1\n   2 │     2\n   3 │     3\n\n\n\n\n\n","category":"method"},{"location":"#Covid.data_check","page":"Home","title":"Covid.data_check","text":"data_check(path_url::String, type::String=\"PATH\", encoding::String=\"UTF-8\")::DataFrame\n\nCrea un DataFrame dado un archivo CSV o una liga al archivo. Se pude especificar el encoding.\n\nEjemplo\n\njulia> url = \"http://www.conapo.gob.mx/work/models/OMI/Datos_Abiertos/DA_IAIM/IAIM_Municipio_2010.csv\"\njulia> first(data_check(url, \"URL\", \"LATIN1\"))\njulia> first(data_check(\"prueba.csv\"))\n\n\n\n\n\n","category":"function"},{"location":"#Covid.fechahoy-Tuple{}","page":"Home","title":"Covid.fechahoy","text":"fechahoy()::String\n\nCrea un string con la fecha de hoy utilizando el formato \"yyyymmdd\". Año con cuarto dígitos, mes y día con dos.\n\nEjemplo\n\njulia> fechahoy()\n\"20210112\"\n\n\n\n\n\n","category":"method"},{"location":"#Covid.sumacolumna-Tuple{DataFrames.DataFrame,Any}","page":"Home","title":"Covid.sumacolumna","text":"sumacolumna(tabla::DataFrame, col::Int)::Number\nsumacolumna(tabla::DataFrame, col::String)::Number\n\nSuma todos los valores de una determinada columna en un DataFrame. Para hacer referencia a que columna se desea sumar se pude usar la posición de la columna o el nombre que tiene. \n\nEjemplo\n\njulia> df = data_check(\"datos.csv\")\n4×2 DataFrame\n Row │ x      y\n     │ Int64  Int64\n─────┼──────────────\n   1 │     0     11\n   2 │     2     12\n   3 │     0     13\n   4 │    40     14\n\njulia> sumacolumna(df, 1)\n42\n\njulia> sumacolumna(df, \"x\")\n42\n\n\n\n\n\n","category":"method"},{"location":"#Covid.sumafila-Tuple{DataFrames.DataFrame,Int64}","page":"Home","title":"Covid.sumafila","text":"sumafila(tabla::DataFrame, fila::Int)::Number\n\nSuma todos los valores de una determinada fila en un DataFrame. La fila se especifica con la posición en la que se encuentra.\n\nEjemplo\n\njulia> df = data_check(\"datos.csv\")\n4×2 DataFrame\n Row │ x      y\n     │ Int64  Int64\n─────┼──────────────\n   1 │     0     11\n   2 │     2     12\n   3 │     0     13\n   4 │    40     14\n\njulia> sumafila(df, 2)\n14\n\njulia> sumafila(df, 4)\n54\n\n\n\n\n\n","category":"method"},{"location":"#Covid.unzip","page":"Home","title":"Covid.unzip","text":"unzip(path::String, dest::String=\"\")\n\nDescomprime y guarda el archivo en el destino indicado(dest), si no se proporciona un destino, se guarda en el directorio actual.\n\nEjemplo\n\njulia> unzip(\"datos.zip\")\njulia> unzip(\"datos.zip\", pwd()*\"/datos\")\n\n\n\n\n\n","category":"function"}]
}
